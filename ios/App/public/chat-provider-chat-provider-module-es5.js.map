{"version":3,"sources":["webpack:///src/app/pages/tabs-provider/chat-provider/chat-provider.page.html","webpack:///src/app/pages/tabs-provider/chat-provider/chat-provider-routing.module.ts","webpack:///src/app/pages/tabs-provider/chat-provider/chat-provider.module.ts","webpack:///src/app/pages/tabs-provider/chat-provider/chat-provider.page.scss","webpack:///src/app/pages/tabs-provider/chat-provider/chat-provider.page.ts"],"names":["routes","path","component","ChatProviderPageRoutingModule","imports","forChild","exports","ChatProviderPageModule","declarations","ChatProviderPage","firestore","api","cookie","router","route","dataUsers","textMessage","listChatActive","noti","id","snapshot","paramMap","get","validateSession","collection","user","valueChanges","subscribe","res","c","chats","ref","orderBy","forEach","notifications","item","getNameReceptop","receptor","notifi","index","length","element","scrollContainer","scrollMe","nativeElement","scrollContainer2","scrollMe2","getMessages","iduserchat","localStorage","getItem","navigate","JSON","parse","date","toDate","calendar","data","service","token","userid","error","idReceptor","self","collectionReverse","collectionChatNotification","docs","doc","result","size","messages","setTimeout","scrollToBottom","currentReceptor","message","useridOri","useridDes","sendMessage","scroll","top","scrollHeight","left","behavior","selector","template"],"mappings":"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","file":"chat-provider-chat-provider-module-es5.js","sourcesContent":["export default \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-title>chat-provider</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-content>\\n\\n  <div class=\\\"row m-0 justify-content-center align-items-start vw-100\\\">    \\n    \\n      <div class=\\\"d-none d-xl-flex chats bg-color2 pl-3 pr-3 overflow-auto pb-3 align-items-start flex-column mt-2\\\">\\n          \\n          <!-- CHAT LIST ITEM -->\\n          <div [ngClass]=\\\"{'bg-color7': chat.receptor == currentReceptor}\\\" *ngFor=\\\"let chat of chats | async\\\" (click)=\\\"getMessages(chat.receptor)\\\" class=\\\"w-100 itemChatList cursor  rounded p-2 pl-3 pr-3 mt-3 row m-0 justify-content-center align-items-center\\\">\\n              <div class=\\\"col-2 row m-0 justify-content-center align-items-center\\\">\\n                  <img width=\\\"40\\\" [src]=\\\"dataUsers[chat.receptor] && dataUsers[chat.receptor].imageprofile ? dataUsers[chat.receptor].imageprofile:'/assets/img/partials/user.svg'\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"chatlistitem flex-1 pl-3\\\">\\n                  <h6 *ngIf=\\\"dataUsers[chat.receptor]\\\" class=\\\"f-11 font-700\\\">{{dataUsers[chat.receptor].name || ''}}</h6>\\n                  <span *ngIf=\\\"getNotification(chat.id) != 0\\\">{{getNotification(chat.id) }}</span>\\n                  <!-- <p class=\\\"f-10 p-0 m-0\\\">{{chat.receptorName}}</p> -->\\n                  <p class=\\\"f-10 p-0 m-0\\\">{{formatDate(chat.date)}}</p>\\n              </div>\\n          </div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"listChatActive\\\" class=\\\"d-flex d-xl-none chats bg-color2 pl-3 pr-3 overflow-auto pb-3 col-12 align-items-center flex-column justify-content-start\\\">\\n      \\n          <!-- CHAT LIST ITEM -->\\n          <div [ngClass]=\\\"{'bg-color7': chat.receptor == currentReceptor}\\\" *ngFor=\\\"let chat of chats | async\\\" (click)=\\\"getMessages(chat.receptor)\\\" class=\\\"w-100 itemChatList cursor  rounded p-2 pl-3 pr-3 mt-3 row m-0 justify-content-center align-items-center\\\">\\n              <div class=\\\"col-2 row m-0 justify-content-center align-items-center\\\">\\n                  <img width=\\\"40\\\" [src]=\\\"dataUsers[chat.receptor] && dataUsers[chat.receptor].imageprofile ? dataUsers[chat.receptor].imageprofile:'/assets/img/partials/user.svg'\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"chatlistitem flex-1 pl-3\\\">\\n                  <h6 *ngIf=\\\"dataUsers[chat.receptor]\\\" class=\\\"f-11 font-700\\\">{{dataUsers[chat.receptor].name || ''}}</h6>\\n                  <span *ngIf=\\\"getNotification(chat.id) != 0\\\">{{getNotification(chat.id) }}</span>\\n                  <!-- <p class=\\\"f-10 p-0 m-0\\\">{{chat.receptorName}}</p> -->\\n                  <p class=\\\"f-10 p-0 m-0\\\">{{formatDate(chat.date)}}</p>\\n              </div>\\n          </div>\\n      \\n      </div>\\n\\n      \\n      <div class=\\\"d-none d-xl-flex messages flex-1 overflow-hidden flex-column align-items-center justify-content-between\\\">        \\n\\n          <div #scrollMe class=\\\"display-chat overflow-auto w-100 align-items-center\\\">\\n\\n              <!-- MESSAGE ITEM RIGHT -->\\n              <div [ngClass]=\\\"{'justify-content-end': user.user.id == m.id, 'justify-content-start': user.user.id != m.id}\\\" class=\\\"row m-0 col-12 mt-3 mb-3\\\"  *ngFor=\\\"let m of messages | async\\\">\\n                  <div [ngClass]=\\\"{'bg-color1': user.user.id == m.id, 'bg-color7': user.user.id != m.id}\\\" class=\\\"parraf p-2 pr-3 pl-3 rounded shadow\\\">\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <p class=\\\"f-11\\\">{{m.message}}</p>\\n                      </div>\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <span class=\\\"f-10\\\">{{formatDate(m.date)}}</span>\\n                      </div>\\n                  </div>\\n              </div>\\n\\n              <!-- MESSAGE ITEM LEFT -->\\n              <!-- <div  class=\\\"row m-0 justify-content-start col-12 mt-3\\\">\\n                  <div class=\\\"parraf bg-color7 p-2 pr-3 pl-3 rounded shadow\\\">\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <p class=\\\"f-11\\\">2Lorem ipsum dolor sit, amet consectetur adipisicing elit. Delectus repudiandae a, dolor dolorem, voluptatum rem ad laudantium blanditiis, sit earum ea officia!</p>\\n                      </div>\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <span class=\\\"f-10\\\">20/10/2020 11:45pm</span>\\n                      </div>\\n                  </div>\\n              </div> -->\\n\\n          </div>       \\n\\n          <!-- MESSAGE INPUT -->\\n          <div class=\\\"input-chat col-12 row m-0 justify-content-center\\\">\\n              <div class=\\\"col-10 mt-3\\\">\\n                  <input class=\\\"pl-4 col-12 rounded-pill shadow-lg\\\" type=\\\"text\\\" [(ngModel)]=\\\"textMessage\\\">\\n              </div>\\n              <div class=\\\"flex-1 mt-3\\\">\\n                  <button (keyup.enter)=\\\"sendMessage()\\\" (click)=\\\"sendMessage()\\\" class=\\\"btn1 rounded-pill\\\">Enviar</button>\\n              </div>\\n          </div>\\n      </div>\\n\\n\\n      <!-- RESPONSIVE -->\\n\\n      <div *ngIf=\\\"!listChatActive\\\" class=\\\"d-flex d-xl-none messages flex-1 overflow-hidden d-flex flex-column align-items-center justify-content-between\\\">\\n\\n          <div  class=\\\"col-12 bg-color2 row m-0 justify-content-center p-4\\\">\\n              <button (click)=\\\"listChatActive = true\\\" class=\\\"btn2 pt-2 pb-2 pl-5 pr-5 f-17 font-900\\\">VOLVER A CHATS</button>           \\n          </div>\\n\\n          <div #scrollMe2 class=\\\"display-chat2 overflow-auto w-100 align-items-center\\\">\\n      \\n              <!-- MESSAGE ITEM RIGHT -->\\n              <div [ngClass]=\\\"{'justify-content-end': user.user.id == m.id, 'justify-content-start': user.user.id != m.id}\\\"\\n                  class=\\\"row m-0 col-12 mt-4 mb-3\\\" *ngFor=\\\"let m of messages | async\\\">\\n                  <div [ngClass]=\\\"{'bg-color1': user.user.id == m.id, 'bg-color7': user.user.id != m.id}\\\"\\n                      class=\\\"parraf p-2 pr-3 pl-3 rounded shadow\\\">\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <p class=\\\"f-11\\\">{{m.message}}</p>\\n                      </div>\\n                      <div class=\\\"row justify-content-end m-0\\\">\\n                          <span class=\\\"f-10\\\">{{formatDate(m.date)}}</span>\\n                      </div>\\n                  </div>\\n              </div>\\n      \\n              <!-- MESSAGE ITEM LEFT -->\\n              <!-- <div  class=\\\"row m-0 justify-content-start col-12 mt-3\\\">\\n                      <div class=\\\"parraf bg-color7 p-2 pr-3 pl-3 rounded shadow\\\">\\n                          <div class=\\\"row justify-content-end m-0\\\">\\n                              <p class=\\\"f-11\\\">2Lorem ipsum dolor sit, amet consectetur adipisicing elit. Delectus repudiandae a, dolor dolorem, voluptatum rem ad laudantium blanditiis, sit earum ea officia!</p>\\n                          </div>\\n                          <div class=\\\"row justify-content-end m-0\\\">\\n                              <span class=\\\"f-10\\\">20/10/2020 11:45pm</span>\\n                          </div>\\n                      </div>\\n                  </div> -->\\n      \\n          </div>\\n      \\n          <!-- MESSAGE INPUT -->\\n          <div class=\\\"input-chat2 col-12 row m-0 justify-content-center\\\">\\n              <div class=\\\"flex-1 mt-3 p-0\\\">\\n                  <input class=\\\"pl-4 col-12 rounded-pill shadow-lg\\\" type=\\\"text\\\" [(ngModel)]=\\\"textMessage\\\">\\n              </div>\\n              <div class=\\\" mt-3 p-0\\\">\\n                  <button (keyup.enter)=\\\"sendMessage()\\\" (click)=\\\"sendMessage()\\\" class=\\\"btnSend bg-color2 pl-2 pr-2 rounded-pill row m-0 justify-content-center align-items-center border-0 ml-2\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 172 172\\\"\\n                      style=\\\" fill:#000000;\\\">\\n                      <g fill=\\\"none\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" stroke-linecap=\\\"butt\\\" stroke-linejoin=\\\"miter\\\"\\n                          stroke-miterlimit=\\\"10\\\" stroke-dasharray=\\\"\\\" stroke-dashoffset=\\\"0\\\" font-family=\\\"none\\\" font-weight=\\\"none\\\"\\n                          font-size=\\\"none\\\" text-anchor=\\\"none\\\" style=\\\"mix-blend-mode: normal\\\">\\n                          <path d=\\\"M0,172v-172h172v172z\\\" fill=\\\"none\\\"></path>\\n                          <g fill=\\\"#ffffff\\\">\\n                              <path\\n                                  d=\\\"M149.06667,17.2c-0.55025,0.00377 -1.09709,0.08674 -1.6237,0.24635c-0.15501,0.04207 -0.30818,0.09064 -0.45911,0.14557l-126.05495,40.08854v0.02239c-2.23962,0.83573 -3.72568,2.97333 -3.72891,5.3638c0.00425,2.00222 1.05271,3.85719 2.76589,4.89349l38.30807,30.39114l75.73151,-60.35677l-60.35677,75.73151l30.36875,38.28567c1.0349,1.7286 2.90117,2.78714 4.91589,2.78828c2.39047,-0.00322 4.52807,-1.48928 5.3638,-3.72891h0.02239l40.12214,-126.16692c0.041,-0.11449 0.07834,-0.23027 0.11198,-0.34714c0.15961,-0.52661 0.24258,-1.07345 0.24636,-1.6237c0,-3.16643 -2.5669,-5.73333 -5.73333,-5.73333z\\\">\\n                              </path>\\n                          </g>\\n                      </g>\\n                  </svg></button>\\n              </div>\\n          </div>\\n      </div>\\n\\n  </div>\\n\\n\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatProviderPage } from './chat-provider.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatProviderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatProviderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatProviderPageRoutingModule } from './chat-provider-routing.module';\n\nimport { ChatProviderPage } from './chat-provider.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatProviderPageRoutingModule\n  ],\n  declarations: [ChatProviderPage]\n})\nexport class ChatProviderPageModule {}\n","export default \"/* FONTS */\\n.chats {\\n  height: 93.5vh;\\n}\\n.itemChatList {\\n  background-color: white;\\n}\\n.bg-color7 {\\n  background-color: #d1d1d1 !important;\\n}\\n.messages {\\n  position: relative;\\n}\\n.messages .display-chat {\\n  min-height: 80vh;\\n  max-height: 80vh;\\n}\\n.messages .display-chat .parraf {\\n  max-width: 90%;\\n}\\n.messages .display-chat2 {\\n  min-height: 84vh;\\n  max-height: 84vh;\\n  padding-bottom: 120px;\\n}\\n.messages .display-chat2 .parraf {\\n  max-width: 90%;\\n}\\n.messages .input-chat {\\n  min-height: 15vh;\\n}\\n.messages .input-chat input {\\n  border: solid 2px #ffe266;\\n  min-height: 50px;\\n}\\n.messages .input-chat .btn1 {\\n  min-height: 50px;\\n}\\n.messages .input-chat2 {\\n  position: absolute;\\n  bottom: 4em;\\n}\\n.messages .input-chat2 input {\\n  border: solid 2px #ffe266;\\n  min-height: 50px;\\n}\\n.messages .input-chat2 .btnSend {\\n  min-height: 50px;\\n  min-width: 50px;\\n  max-width: 50px;\\n}\\n.listItem {\\n  background-color: \\\"gray\\\" !important;\\n}\\n.chatlistitem {\\n  position: relative;\\n}\\n.chatlistitem span {\\n  position: absolute;\\n  min-width: 18px;\\n  max-width: 18px;\\n  min-height: 18px;\\n  max-height: 18px;\\n  background-color: red;\\n  color: white;\\n  z-index: 2;\\n  top: 0;\\n  right: 0;\\n  border-radius: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGFicy1wcm92aWRlci9jaGF0LXByb3ZpZGVyL0M6XFx3YW1wNjRcXHd3d1xcdmFvcGVydS9zcmNcXHN0eWxlc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3RhYnMtcHJvdmlkZXIvY2hhdC1wcm92aWRlci9DOlxcd2FtcDY0XFx3d3dcXHZhb3BlcnUvc3JjXFxhcHBcXHBhZ2VzXFx0YWJzLXByb3ZpZGVyXFxjaGF0LXByb3ZpZGVyXFxjaGF0LXByb3ZpZGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvdGFicy1wcm92aWRlci9jaGF0LXByb3ZpZGVyL2NoYXQtcHJvdmlkZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQUE7QUNFQTtFQUNJLGNBQUE7QUNBSjtBREdBO0VBQ0ksdUJBQUE7QUNBSjtBREdBO0VBQ0ksb0NBQUE7QUNBSjtBREdBO0VBRUksa0JBQUE7QUNESjtBREdJO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtBQ0RSO0FERVE7RUFDSSxjQUFBO0FDQVo7QURJSTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0ZSO0FER1E7RUFDSSxjQUFBO0FDRFo7QURLSTtFQUNJLGdCQUFBO0FDSFI7QURJUTtFQUNJLHlCQUFBO0VBQ0EsZ0JBQUE7QUNGWjtBRElRO0VBQ0ksZ0JBQUE7QUNGWjtBRE1JO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0FDSlI7QURLUTtFQUNJLHlCQUFBO0VBQ0EsZ0JBQUE7QUNIWjtBREtRO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtBQ0haO0FEUUE7RUFDSSxtQ0FBQTtBQ0xKO0FEUUE7RUFDSSxrQkFBQTtBQ0xKO0FETUk7RUFDSSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxNQUFBO0VBQ0EsUUFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNKUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYnMtcHJvdmlkZXIvY2hhdC1wcm92aWRlci9jaGF0LXByb3ZpZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEZPTlRTICovXHJcblxyXG4kZm9udE06IE15cmlhZFBybztcclxuJGZvbnRUOiBUcmVidWNoZXRNUztcclxuXHJcblxyXG4vLyBDT0xPUlMgXHJcblxyXG5cclxuJGNvbG9yMTogI2ZmZTI2NjtcclxuJGNvbG9yMjogIzEzYmY5ZTtcclxuJGNvbG9yMzogIzMzMzMzMztcclxuJGNvbG9yNDogIzRkNGQ0ZDtcclxuJGNvbG9yNTogIzgwODA4MDtcclxuJGNvbG9yNjogI0E5QUJBRTtcclxuJGNvbG9yNzogI2U2ZTZlNjtcclxuJGNvbG9yODogI2VjN2M4YjtcclxuJGNvbG9yOTogIzAwYTE5ODtcclxuJGNvbG9yMTA6ICMzMTQ4OGE7XHJcbiIsIkBpbXBvcnQgJy4uLy4uLy4uLy4uL3N0eWxlcy92YXJpYWJsZXMnO1xyXG5cclxuLmNoYXRze1xyXG4gICAgaGVpZ2h0OiA5My41dmg7XHJcbn1cclxuXHJcbi5pdGVtQ2hhdExpc3R7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmJnLWNvbG9yN3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDksIDIwOSwgMjA5KSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWVzc2FnZXN7XHJcblxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIC5kaXNwbGF5LWNoYXR7ICAgICAgICBcclxuICAgICAgICBtaW4taGVpZ2h0OiA4MHZoO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDgwdmg7XHJcbiAgICAgICAgLnBhcnJhZntcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5kaXNwbGF5LWNoYXQyeyAgICAgICAgXHJcbiAgICAgICAgbWluLWhlaWdodDogODR2aDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA4NHZoO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMjBweDtcclxuICAgICAgICAucGFycmFme1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmlucHV0LWNoYXR7XHJcbiAgICAgICAgbWluLWhlaWdodDogMTV2aDtcclxuICAgICAgICBpbnB1dHtcclxuICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAycHggJGNvbG9yMTtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogNTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmJ0bjF7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5pbnB1dC1jaGF0MntcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiA0ZW07ICAgICAgICBcclxuICAgICAgICBpbnB1dHtcclxuICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAycHggJGNvbG9yMTtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogNTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmJ0blNlbmR7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogNTBweDtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmxpc3RJdGVte1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJ2dyYXknICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jaGF0bGlzdGl0ZW17XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBzcGFue1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBtaW4td2lkdGg6IDE4cHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxOHB4O1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDE4cHg7XHJcbiAgICAgICAgbWF4LWhlaWdodDogMThweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG59IiwiLyogRk9OVFMgKi9cbi5jaGF0cyB7XG4gIGhlaWdodDogOTMuNXZoO1xufVxuXG4uaXRlbUNoYXRMaXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5iZy1jb2xvcjcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFkMWQxICFpbXBvcnRhbnQ7XG59XG5cbi5tZXNzYWdlcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5tZXNzYWdlcyAuZGlzcGxheS1jaGF0IHtcbiAgbWluLWhlaWdodDogODB2aDtcbiAgbWF4LWhlaWdodDogODB2aDtcbn1cbi5tZXNzYWdlcyAuZGlzcGxheS1jaGF0IC5wYXJyYWYge1xuICBtYXgtd2lkdGg6IDkwJTtcbn1cbi5tZXNzYWdlcyAuZGlzcGxheS1jaGF0MiB7XG4gIG1pbi1oZWlnaHQ6IDg0dmg7XG4gIG1heC1oZWlnaHQ6IDg0dmg7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDtcbn1cbi5tZXNzYWdlcyAuZGlzcGxheS1jaGF0MiAucGFycmFmIHtcbiAgbWF4LXdpZHRoOiA5MCU7XG59XG4ubWVzc2FnZXMgLmlucHV0LWNoYXQge1xuICBtaW4taGVpZ2h0OiAxNXZoO1xufVxuLm1lc3NhZ2VzIC5pbnB1dC1jaGF0IGlucHV0IHtcbiAgYm9yZGVyOiBzb2xpZCAycHggI2ZmZTI2NjtcbiAgbWluLWhlaWdodDogNTBweDtcbn1cbi5tZXNzYWdlcyAuaW5wdXQtY2hhdCAuYnRuMSB7XG4gIG1pbi1oZWlnaHQ6IDUwcHg7XG59XG4ubWVzc2FnZXMgLmlucHV0LWNoYXQyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDRlbTtcbn1cbi5tZXNzYWdlcyAuaW5wdXQtY2hhdDIgaW5wdXQge1xuICBib3JkZXI6IHNvbGlkIDJweCAjZmZlMjY2O1xuICBtaW4taGVpZ2h0OiA1MHB4O1xufVxuLm1lc3NhZ2VzIC5pbnB1dC1jaGF0MiAuYnRuU2VuZCB7XG4gIG1pbi1oZWlnaHQ6IDUwcHg7XG4gIG1pbi13aWR0aDogNTBweDtcbiAgbWF4LXdpZHRoOiA1MHB4O1xufVxuXG4ubGlzdEl0ZW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBcImdyYXlcIiAhaW1wb3J0YW50O1xufVxuXG4uY2hhdGxpc3RpdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmNoYXRsaXN0aXRlbSBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtaW4td2lkdGg6IDE4cHg7XG4gIG1heC13aWR0aDogMThweDtcbiAgbWluLWhlaWdodDogMThweDtcbiAgbWF4LWhlaWdodDogMThweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICBjb2xvcjogd2hpdGU7XG4gIHotaW5kZXg6IDI7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { ApiService } from 'src/app/services/api.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-chat-provider',\n  templateUrl: './chat-provider.page.html',\n  styleUrls: ['./chat-provider.page.scss'],\n})\nexport class ChatProviderPage implements OnInit {\n\n  chats: Observable<any[]>;\n  notifications: Observable<any[]>;\n  user: any;\n  dataUsers: any = []\n  id: any;\n  messages: Observable<any[]>;\n  textMessage: String = ''\n  currentReceptor: any;\n  listChatActive: Boolean = true\n  scrollContainer: any;\n  scrollContainer2: any;\n\n  noti: any = []\n\n  @ViewChild('scrollMe', { static: false }) scrollMe: ElementRef;\n  @ViewChild('scrollMe2', { static: false }) scrollMe2: ElementRef;\n\n\n  constructor(private firestore: AngularFirestore, private api: ApiService, private cookie: CookieService, private router: Router, public route: ActivatedRoute) {\n\n    this.id = this.route.snapshot.paramMap.get('id')\n    this.validateSession(this.id)\n\n    //get notifications\n    firestore.collection('chatnotification_' + this.user.user.id).valueChanges().subscribe((res: any) => {\n\n      this.api.c('Notifications', res)\n\n      this.noti = res;\n\n\n    })\n\n\n\n    //get Chats\n    this.chats = firestore.collection('chatlist_' + this.user.user.id, ref => ref.orderBy('date', 'desc')).valueChanges();\n\n\n\n    this.chats.forEach((res) => {\n      this.api.c('Chats', this.notifications)\n      res.forEach((item) => {\n        this.api.c('Chats item ', item)\n        this.getNameReceptop(item.receptor)\n      })\n    })\n\n    moment.locale(\"es\");\n  }\n\n\n  getNotification(id) {\n\n    var notifi = 0;\n    for (let index = 0; index < this.noti.length; index++) {\n      const element = this.noti[index];\n\n      if (element.id == id) {\n        notifi++\n      }\n\n    }\n    return notifi\n\n  }\n\n  ngAfterViewInit() {\n    this.scrollContainer = this.scrollMe ? this.scrollMe.nativeElement:null;\n    this.scrollContainer2 = this.scrollMe2? this.scrollMe2.nativeElement: null;\n  }\n\n\n  ngOnInit(): void {\n\n    if (this.id != 0) {\n      this.getMessages(this.id)\n    }\n\n  }\n\n  validateSession(iduserchat) {\n\n    if (!localStorage.getItem('ud') || localStorage.getItem('ud') == '') {\n      this.router.navigate(['/login'])\n    } else {\n      this.user = JSON.parse(localStorage.getItem('ud'))\n      // if (this.user.user.role !== \"proveedor\" && this.user.user.role !== \"admin\") {\n      //   this.router.navigate(['/chat-user/' + iduserchat])\n      // }\n    }\n  }\n\n  formatDate(date) {\n    return moment(date.toDate()).calendar();\n  }\n\n\n  getNameReceptop(id) {\n\n    let data = {\n      service: 'get-data-user-by-id',\n      token: this.user.token,\n      userid: id\n    }\n\n    this.api.api(data).subscribe((res: any) => {\n      this.api.c('getNameReceptop', res)\n      this.dataUsers[id] = res\n      this.dataUsers = this.dataUsers\n      this.api.c('dataUsers', this.dataUsers)\n\n    },\n      error => {\n        this.api.c('getProducts error', error)\n      })\n\n  }\n\n  async getMessages(idReceptor) {\n\n    var self = this\n    this.listChatActive = false\n    let collection = 'chat_' + this.user.user.id + '_' + idReceptor\n    let collectionReverse = 'chat_' + idReceptor + '_' + this.user.user.id\n    let collectionChatNotification = 'chatnotification_' + this.user.user.id\n\n    await this.firestore.collection(collection).get().subscribe(async res => {\n\n      await this.firestore.collection(collectionChatNotification).get().subscribe((res:any)=>{\n        \n        res.docs.forEach(async doc => {\n          this.firestore.collection(collectionChatNotification).doc(doc.id).get().subscribe(async (result: any) => {\n            if (result.data().id == 'chat_' + idReceptor + '_' + this.user.user.id) {\n              await this.firestore.collection(collectionChatNotification).doc(result.id).delete()\n            }\n          })\n        });       \n\n      })\n\n      if (res.size != 0) {\n        this.messages = this.firestore.collection(collection, ref => ref.orderBy('date')).valueChanges()\n      } else {\n        this.messages = this.firestore.collection(collectionReverse, ref => ref.orderBy('date')).valueChanges()\n      }\n      this.messages.subscribe((res) => {\n        setTimeout(() => {\n\n          self.scrollToBottom()\n        }, 2000)\n      })\n    })\n    this.currentReceptor = idReceptor\n\n  }\n\n\n\n\n  sendMessage() {\n\n    let data = {\n      message: this.textMessage,\n      useridOri: this.user.user.id,\n      useridDes: this.currentReceptor,\n    }\n\n    this.api.sendMessage(data)\n    this.textMessage = ''\n    this.scrollToBottom()\n\n  }\n\n  scrollToBottom(): void {\n    this.scrollContainer = this.scrollMe.nativeElement;\n    this.scrollContainer2 = this.scrollMe2.nativeElement;\n\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n\n    this.scrollContainer2.scroll({\n      top: this.scrollContainer2.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n\n}\n"]}